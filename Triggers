-- Crear tablas LOG para empleados y evaluación de rendimiento:

CREATE TABLE employees_log (
    id INT AUTO_INCREMENT,
    operacion VARCHAR(50),
    hora_operacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_empleado INT,
    usuario VARCHAR(50),
    PRIMARY KEY(id)
);

CREATE TABLE performance_evaluations_log (
    id INT AUTO_INCREMENT,
    operacion VARCHAR(50),
    hora_operacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_evaluacion INT,
    usuario VARCHAR(50),
    PRIMARY KEY(id)
);


-- Crear los desencadenadores: Desencadenador BEFORE UPDATE en la tabla employees:
-- Este desencadenador registrará cada operación de actualización en la tabla employees antes de que ocurra.

DELIMITER //
CREATE TRIGGER antes_actualizacion_empleado
BEFORE UPDATE ON empleados
FOR EACH ROW
BEGIN
    INSERT INTO employees_log(operacion, id_empleado, usuario) 
    VALUES ('ACTUALIZAR', OLD.id, CURRENT_USER());
END; //
DELIMITER ;

-- Desencadenador AFTER INSERT en la tabla performance_evaluations:
-- Este desencadenador registrará cada operación de inserción en la tabla performance_evaluations después de que ocurra.

DELIMITER //
CREATE TRIGGER despues_insercion_evaluacion
AFTER INSERT ON evaluaciones_desempenio
FOR EACH ROW
BEGIN
    INSERT INTO performance_evaluations_log(operacion, id_evaluacion, usuario)
    VALUES ('INSERTAR', NEW.id, CURRENT_USER());
END; //
DELIMITER ;
