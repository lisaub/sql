-- Stored Procedure para Ordenar una Tabla: Este procedimiento almacenado te permite ordenar una tabla por un campo especificado ya sea en orden ascendente o descendente.

DELIMITER //
CREATE PROCEDURE OrdenarTabla(IN nombre_tabla CHAR(64), IN nombre_campo CHAR(64), IN tipo_orden CHAR(4))
BEGIN
  SET @s = CONCAT('SELECT * FROM ', nombre_tabla, ' ORDER BY ', nombre_campo, ' ', tipo_orden);
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END //
DELIMITER ;

-- CALL OrdenarTabla('empleados', 'nombre', 'DESC');

-- Stored Procedure para Actualizar el Salario de un Empleado:
DELIMITER //
CREATE PROCEDURE ActualizarSalarioEmpleado(IN id_emp INT, IN nuevo_salario DECIMAL(10,2))
BEGIN
  UPDATE empleados SET salario = nuevo_salario WHERE id = id_emp;
END //
DELIMITER ;

-- CALL ActualizarSalarioEmpleado(1, 6000.00);

-- Stored Procedure para Obtener Detalles de Empleados: Este procedimiento almacenado recupera todos los detalles de un empleado dado su ID.

DELIMITER //
CREATE PROCEDURE ObtenerDetallesEmpleado(IN id_emp INT)
BEGIN
  SELECT * FROM empleados WHERE id = id_emp;
END //
DELIMITER ;

-- CALL ObtenerDetallesEmpleado(1);

-- Stored Procedure para Actualizar el Departamento de un Empleado: Este procedimiento almacenado actualiza el departamento de un empleado.

DELIMITER //
CREATE PROCEDURE ActualizarDepartamentoEmpleado(IN id_emp INT, IN nuevo_id_dept INT)
BEGIN
  UPDATE empleados SET id_departamento = nuevo_id_dept WHERE id = id_emp;
END //
DELIMITER ;

CALL ActualizarDepartamentoEmpleado(1, 2);

-- Procedimiento Almacenado para Insertar o Eliminar un Registro: Este procedimiento almacenado te permite insertar un nuevo registro en la tabla de empleados o eliminar un registro específico de ella.

DELIMITER //
CREATE PROCEDURE InsertarEliminarEmpleado(IN accion CHAR(6), IN id_emp INT, IN primer_nombre CHAR(50), IN apellido CHAR(50))
BEGIN
  IF accion = 'insert' THEN
    INSERT INTO empleados(primer_nombre, apellido) VALUES (primer_nombre, apellido);
  ELSEIF accion = 'delete' THEN
    DELETE FROM empleados WHERE id = id_emp;
  ELSE
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'ERROR: Acción inválida. Utilice "insert" o "delete".';
  END IF;
END //
DELIMITER ;

-- CALL InsertarEliminarEmpleado('insert', NULL, 'John', 'Doe');
-- CALL InsertarEliminarEmpleado('delete', 1, NULL, NULL);
