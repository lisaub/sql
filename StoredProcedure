-- Stored Procedure to Order a Table: This stored procedure allows you to order a table by a specified field in either ascending or descending order.

DELIMITER //
CREATE PROCEDURE OrderTable(IN table_name CHAR(64), IN field_name CHAR(64), IN order_type CHAR(4))
BEGIN
  SET @s = CONCAT('SELECT * FROM ', table_name, ' ORDER BY ', field_name, ' ', order_type);
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END //
DELIMITER ;

-- CALL OrderTable('employees', 'first_name', 'DESC');



-- Stored Procedure to Update the salary of an employee:
DELIMITER //
CREATE PROCEDURE UpdateEmployeeSalary(IN emp_id INT, IN new_salary DECIMAL(10,2))
BEGIN
  UPDATE employees SET salary = new_salary WHERE id = emp_id;
END //
DELIMITER ;

-- CALL UpdateEmployeeSalary(1, 6000.00);



-- Stored Procedure to Get Employee Details: This stored procedure retrieves all details of an employee given their ID.

DELIMITER //
CREATE PROCEDURE GetEmployeeDetails(IN emp_id INT)
BEGIN
  SELECT * FROM employees WHERE id = emp_id;
END //
DELIMITER ;

-- CALL GetEmployeeDetails(1);



-- Stored Procedure to Update Employeeâ€™s Department: This stored procedure updates the department of an employee.

DELIMITER //
CREATE PROCEDURE UpdateEmployeeDepartment(IN emp_id INT, IN new_dept_id INT)
BEGIN
  UPDATE employees SET department_id = new_dept_id WHERE id = emp_id;
END //
DELIMITER ;

-- CALL UpdateEmployeeDepartment(1, 2);



-- Stored Procedure to Insert or Delete a Record: This stored procedure allows you to either insert a new record into the employees table or delete a specific record from it.

DELIMITER //
CREATE PROCEDURE InsertOrDeleteEmployee(IN action CHAR(6), IN emp_id INT, IN first_name CHAR(50), IN last_name CHAR(50))
BEGIN
  IF action = 'insert' THEN
    INSERT INTO employees(first_name, last_name) VALUES (first_name, last_name);
  ELSEIF action = 'delete' THEN
    DELETE FROM employees WHERE id = emp_id;
  ELSE
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'ERROR: Invalid action. Use either "insert" or "delete".';
  END IF;
END //
DELIMITER ;

-- CALL InsertOrDeleteEmployee('insert', NULL, 'John', 'Doe');
-- CALL InsertOrDeleteEmployee('delete', 1, NULL, NULL);
